@inject ApplicationUserManager<ApplicationUser> UserManager
@using BusarovsQuickBite.Infrastructure.Data.Models
@using BusarovsQuickBite.Core.Services
@model AdministrationViewModel
<table class="table">
    <thead>
        <tr>
            <th scope="col">Username</th>
            <th scope="col">Email</th>
            <th scope="col">Created On</th>
            <th scope="col">Role Name</th>
            <th scope="col">Role Action</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var role in Model.Roles)
        {
            <tr>
                <td>@Model.Username</td>
                <td>@Model.Email</td>
                <td>@Model.TransactionDateAndTime</td>
                <td>@role.Name</td>

                @if (await UserManager.IsInRoleAsyncById(Model.Id, role.Name))
                {
                    <td>
                        @using (Html.BeginForm("RemoveFromRole", "Administration", new { userId = Model.Id, roleName = role.Name }, FormMethod.Post))
                        {
                            <button type="submit" class="btn btn-danger">Remove</button>
                        }
                    </td>
                }
                else
                {
                    <td>
                        @using (Html.BeginForm("AddToRole", "Administration", new { userId = Model.Id, roleName = role.Name }, FormMethod.Post))
                        {
                            <button type="submit" class="btn btn-success">Add</button>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
<td>@Html.ActionLink("Back to Administration", "Index", "Administration", new { }, new { @class = "btn btn-primary" })</td>
<div style="margin-top: 20px;"></div>
@{
    await Html.RenderPartialAsync("_MessagePartial", TempData);
}
